const length = Number(prompt('Enter number'));
const array = new Array(length);
let count = 0;

do {
    const elem = prompt('Enter element');
    array[count] = elem;
    count += 1;
} while(count < length);

array.sort(function(a, b) {return a - b});
console.log(array);
array.splice(2, 3);
console.log(array);


// ===============================================================================================
// Задание
// Створити масив, довжину та елементи якого задає користувач.
// Відсортувати масив за зростанням.
// Видалити елементи з масиву з 2 по 4 (включно!).
// У міру змін виводити вміст масиву на сторінку.



// ==================================================Разбирала для себя===========================
// // forEach – для перебора массива

// const arr = ["Яблоко", "Апельсин", "Груша"];
// arr.forEach(function(item, i, arr) {
//   console.log( i + ": " + item + " (массив:" + arr + ")" );
// });

// ====================================================================================================
// filter – для фильтрации массива через функцию, создаёт новый массив, в который войдут только те элементы arr

// const arr = [1, -1, 2, -2, 3];
// const positiveArr = arr.filter(function(i) {
//   return i > 0;
// });

// console.log( positiveArr ); // 1,2,3

// ===================================================================================================
// map – для трансформации массива, создаёт новый массив, который будет состоять из результатов вызова callback(item, i, arr) для каждого элемента arr.

// const names = ['HTML', 'CSS', 'JavaScript'];
// const nameLengths = names.map(function(name) {
//   return name.length;
// });

// // получили массив с длинами
// console.log( nameLengths ); // 4,3,10

// ===================================================================================================
// length - 1 / at(-1) – удалить последний элемент

// let fruits = ["Apple", "Orange", "Plum"];
// console.log(fruits[fruits.length -1] ); // Plum – возвращает второй элемент массива
// console.log(fruits.at(-1)); // Plum
// console.log(fruits); // Apple, Orange, Plum

// ==================================================================================
// pop – удаляет последний элемент массива и возвращает

// const fruits = ["Apple", "Orange", "Pear"];
// console.log( fruits.pop() ); // видаляємо "Pear" та виводимо його
// console.log( fruits ); // Apple, Orange

// ===================================================================================
// push – добавляет элемент в конец массива

// const fruits = ["Apple", "Orange"];
// fruits.push("Pear");
// console.log( fruits ); // Apple, Orange, Pear

// ====================================================================================
//  shift – удаляет первый элемент массива и возвращает его

// const fruits = ["Apple", "Orange", "Pear"];
// console.log( fruits.shift() ); // видаляємо Apple та виводимо його
// console.log( fruits ); // Orange, Pear

// =====================================================================================
// unshift – добавляет элемент в начало массива

// const fruits = ["Orange", "Pear"];
// fruits.unshift('Apple');
// console.log( fruits ); // Apple, Orange, Pear

// const fruits = ["Banana"]
// const arr = fruits; // копіюється за посиланням (дві змінні посилаються на один масив)
// console.log( arr === fruits ); // true
// arr.push("Pear"); // зміна масиву за посиланням
// console.log( fruits ); // Banana, Pear - наразі два елемента

// ========================================================================================
// splice – добавлять, удалять и заменять элементы – arr.splice(index[, deleteCount, elem1, ..., elemN])

// const arr = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
// // удалить 3 первых элемента и заменить их другими
// arr.splice(0, 3, "Давай", "танцевать");
// console.log( arr ) // теперь ["Давай", "танцевать", "прямо", "сейчас"]

// =========================================================================================
// for – циклы

// const arr = ["Apple", "Orange", "Pear"];
// for (let i = 0; i < arr.length; i++) {
//   console.log( arr[i] );
// }

// ==========================================================================================
// for..of

// const fruits = ["Apple", "Orange", "Plum"];
// ітерується по елементам масиву
// for (let fruit of fruits) {
//   console.log( fruit );
// }

// ========================================================================================
// for..in – не стоит использовать для массивов

// const arr = ["Apple", "Orange", "Pear"];
// for (let key in arr) {
//   console.log( arr[key] ); // Apple, Orange, Pear
// }

// ========================================================================================
// length – обновляется автоматически, когда меняется массив

// const fruits = [];
// fruits[123] = "Apple";
// console.log( fruits ); // 123: "Apple"
// console.log( fruits.length ); // 124

// =========================================================================================
// const arr = [1, 2, 3, 4, 5];

// arr.length = 2; // скорочуємо до двох елементів
// console.log( arr ); // [1, 2]

// arr.length = 5; // повертаємо попередню довжину ...
// console.log( arr[3] ); // undefined: ..., а видалені значення не повертаються
